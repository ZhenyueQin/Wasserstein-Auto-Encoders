fading_squares_opts = {}
fading_squares_opts['dataset'] = 'fading_squares'
fading_squares_opts['experiment_path'] = 'fading_squares/exp1'
fading_squares_opts['z_dim'] = 2
fading_squares_opts['print_log_information'] = True
fading_squares_opts['make_pictures_every'] = 500
fading_squares_opts['save_every'] = 500
fading_squares_opts['plot_axis_walks'] = True
fading_squares_opts['axis_walk_range'] = 1
fading_squares_opts['plot_losses'] =  True
fading_squares_opts['print_log_information'] = True
fading_squares_opts['batch_size'] = 100
fading_squares_opts["encoder_architecture"] = 'FC_dsprites'
fading_squares_opts["decoder_architecture"] = 'FC_dsprites'
fading_squares_opts['z_mean_activation'] = None
fading_squares_opts['encoder_distribution'] = 'uniform'
fading_squares_opts['logvar-clipping'] = [-20,5]
fading_squares_opts['z_prior'] = 'uniform'
fading_squares_opts['loss_reconstruction'] = 'bernoulli'
fading_squares_opts['loss_regulariser'] = 'WAE_MMD'
fading_squares_opts['lambda_imq'] = 20.0
coeffs = [0.001, 0.005, 0.01, 0.05, 0.1, 0.2, 0.5, 0.8, 1.0, 2.0]
fading_squares_opts['IMQ_length_params'] = [c*fading_squares_opts['z_dim'] for c in coeffs]
fading_squares_opts['z_logvar_regularisation'] = None
#fading_squares_opts['lambda_logvar_regularisation'] = 0.5
fading_squares_opts['optimizer'] = 'adam'
fading_squares_opts['learning_rate_schedule'] = [(1e-3, 10000), (7e-4, 20000), (3e-4, 30000), (1e-4, 40001), ]


dsprites_opts = {}
dsprites_opts['dataset'] = 'dsprites'
dsprites_opts['experiment_path'] = 'dsprites/exp1'
dsprites_opts['z_dim'] = 16
dsprites_opts['print_log_information'] = True
dsprites_opts['make_pictures_every'] = 500
dsprites_opts['save_every'] = 500
dsprites_opts['plot_axis_walks'] = False
#dsprites_opts['axis_walk_range'] = 1
dsprites_opts['plot_losses'] =  False
dsprites_opts['print_log_information'] = True
dsprites_opts['batch_size'] = 100
dsprites_opts["encoder_architecture"] = 'FC_dsprites'
dsprites_opts["decoder_architecture"] = 'FC_dsprites'
dsprites_opts['z_mean_activation'] = 'tanh'
dsprites_opts['encoder_distribution'] = 'gaussian'
dsprites_opts['logvar-clipping'] = [-20,5]
dsprites_opts['z_prior'] = 'gaussian'
dsprites_opts['loss_reconstruction'] = 'bernoulli'
dsprites_opts['loss_regulariser'] = 'WAE_MMD'
dsprites_opts['lambda_imq'] = 20.0
coeffs = [0.001, 0.005, 0.01, 0.05, 0.1, 0.2, 0.5, 0.8, 1.0, 2.0]
dsprites_opts['IMQ_length_params'] = [c*dsprites_opts['z_dim'] for c in coeffs]
dsprites_opts['z_logvar_regularisation'] = "L1"
dsprites_opts['lambda_logvar_regularisation'] = 3.0
dsprites_opts['optimizer'] = 'adam'
dsprites_opts['learning_rate_schedule'] = [(1e-3, 15000), (7e-4, 30000), (3e-4, 45000), (1e-4, 60001)]


celebA_mini_opts = {}
celebA_mini_opts['dataset'] = 'celebA_mini'
celebA_mini_opts['experiment_path'] = 'celebA_mini/exp1'
celebA_mini_opts['z_dim'] = 10
celebA_mini_opts['print_log_information'] = True
celebA_mini_opts['make_pictures_every'] = 100
celebA_mini_opts['save_every'] = 100
celebA_mini_opts['plot_axis_walks'] = False
#celebA_mini_opts['axis_walk_range'] = 1
celebA_mini_opts['plot_losses'] =  False
celebA_mini_opts['print_log_information'] = True
celebA_mini_opts['batch_size'] = 100
celebA_mini_opts["encoder_architecture"] = 'small_convolutional_celebA'
celebA_mini_opts["decoder_architecture"] = 'small_convolutional_celebA'
celebA_mini_opts['z_mean_activation'] = None
celebA_mini_opts['encoder_distribution'] = 'gaussian'
celebA_mini_opts['logvar-clipping'] = [-20,5]
celebA_mini_opts['z_prior'] = 'gaussian'
celebA_mini_opts['loss_reconstruction'] = 'bernoulli'
celebA_mini_opts['loss_regulariser'] = 'WAE_MMD'
celebA_mini_opts['lambda_imq'] = 400.0
coeffs = [0.001, 0.005, 0.01, 0.05, 0.1, 0.2, 0.5, 0.8, 1.0, 2.0]
celebA_mini_opts['IMQ_length_params'] = [c*celebA_mini_opts['z_dim'] for c in coeffs]
celebA_mini_opts['z_logvar_regularisation'] = "L1"
celebA_mini_opts['lambda_logvar_regularisation'] = 0.1
celebA_mini_opts['optimizer'] = 'adam'
celebA_mini_opts['learning_rate_schedule'] = [(1e-4, 40000), (1e-5, 80001)]


opts = celebA_mini_opts
